<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ragedunicorn.tools.maven</groupId>
  <artifactId>sql-execute-example</artifactId>
  <packaging>jar</packaging>
  <version>1.0.3-SNAPSHOT</version>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>Example project for Maven sql execute plugin</description>
  <url>https://github.com/RagedUnicorn/sql-execute-maven-plugin</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
      <comments>A short, permissive software license. Basically, you can do whatever you want as long as you include the
        original copyright and license notice in any copy of the software/source.
      </comments>
    </license>
  </licenses>

  <organization>
    <name>RagedUnicorn</name>
    <url>http://ragedunicorn.com</url>
  </organization>

  <developers>
    <developer>
      <id>mwiesendanger</id>
      <name>Michael Wiesendanger</name>
      <email>michael.wiesendanger@gmail.com</email>
      <url>http://ragedunicorn.com</url>
      <organization>RagedUnicorn</organization>
      <organizationUrl>http://ragedunicorn.com</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>Switzerland/Zurich</timezone>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <profiles>
    <profile>
      <id>mariadb</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <database.baseurl>jdbc:mariadb://localhost:3306/</database.baseurl>
        <database.url>${database.baseurl}</database.url>
        <database.driver>org.mariadb.jdbc</database.driver>
        <database.server>plugin-test</database.server>
        <database.name>world_test</database.name>
        <database.schema>src/main/resources/mysql_schema.sql</database.schema>
        <database.data>src/main/resources/mysql_data.sql</database.data>
        <database.drop>DROP SCHEMA IF EXISTS ${database.name}</database.drop>
        <database.create>CREATE SCHEMA ${database.name}</database.create>
      </properties>
    </profile>
    <profile>
      <id>mysql</id>
      <properties>
        <database.baseurl>jdbc:mysql://localhost:3306/</database.baseurl>
        <database.url>${database.baseurl}</database.url>
        <database.driver>mysql</database.driver>
        <database.server>plugin-test</database.server>
        <database.name>world_test</database.name>
        <database.schema>src/main/resources/mysql_schema.sql</database.schema>
        <database.data>src/main/resources/mysql_data.sql</database.data>
        <database.drop>DROP SCHEMA IF EXISTS ${database.name}</database.drop>
        <database.create>CREATE SCHEMA ${database.name}</database.create>
      </properties>
    </profile>
    <profile>
      <id>postgresql</id>
      <properties>
        <database.baseurl>jdbc:postgresql://localhost:5432/</database.baseurl>
        <database.url>jdbc:postgresql://localhost:5432/postgres</database.url>
        <database.driver>org.postgresql</database.driver>
        <database.server>plugin-test</database.server>
        <database.name>world_test</database.name>
        <database.schema>src/main/resources/postgresql_schema.sql</database.schema>
        <database.data>src/main/resources/postgresql_data.sql</database.data>
        <database.drop>DROP DATABASE IF EXISTS ${database.name}</database.drop>
        <database.create>CREATE DATABASE ${database.name}</database.create>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>com.ragedunicorn.tools.maven</groupId>
        <artifactId>sql-execute-maven-plugin</artifactId>
        <version>1.0.3-SNAPSHOT</version>
        <dependencies>
          <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.0.3</version>
          </dependency>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
          </dependency>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5</version>
          </dependency>
        </dependencies>
        <configuration>
          <driver>${database.driver}</driver>
          <url>${database.url}</url>
          <server>${database.server}</server>
        </configuration>
        <!-- info: maven executes executions in the same phase exactly as they are listed in the pom.xml -->
        <executions>
          <!-- start from scratch remove database -->
          <execution>
            <id>clean-db</id>
            <phase>install</phase>
            <goals>
              <goal>sql-execute</goal>
            </goals>
            <configuration>
              <url>${database.url}</url>
              <sqlQuery>${database.drop}</sqlQuery>
            </configuration>
          </execution>
          <!-- create initial database -->
          <execution>
            <id>create-db</id>
            <phase>install</phase>
            <goals>
              <goal>sql-execute</goal>
            </goals>
            <configuration>
              <url>${database.url}</url>
              <sqlQuery>${database.create}</sqlQuery>
            </configuration>
          </execution>
          <!-- create schema -->
          <execution>
            <id>create-schema</id>
            <phase>install</phase>
            <goals>
              <goal>sql-execute</goal>
            </goals>
            <configuration>
              <!-- overwrite connection url with database to use -->
              <url>${database.baseurl}${database.name}</url>
              <sqlFiles>
                <sqlFiles>${database.schema}</sqlFiles>
              </sqlFiles>
            </configuration>
          </execution>
          <!-- insert data -->
          <execution>
            <id>create-data</id>
            <phase>install</phase>
            <goals>
              <goal>sql-execute</goal>
            </goals>
            <configuration>
              <!-- overwrite connection url with database to use -->
              <url>${database.baseurl}${database.name}</url>
              <sqlFiles>
                <sqlFiles>${database.data}</sqlFiles>
              </sqlFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- include for debugging -->
  <!--
  <dependencies>
    <dependency>
      <groupId>com.ragedunicorn.tools.maven</groupId>
      <artifactId>sql-execute-maven-plugin</artifactId>
      <version>1.0.3-SNAPSHOT</version>
    </dependency>
  </dependencies>
  -->
</project>
